name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Разрешает ручной запуск

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Полная история коммитов
    
    - name: Setup environment variables
      run: |
        echo "GITHUB_REPO_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
        echo "GITHUB_REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
        echo "REPO_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_ENV
    
    - name: Create Telegram config
      run: |
        mkdir -p secret
        # Безопасное создание JSON с проверкой
        echo '{"BOT_TOKEN":"'"${{ secrets.TELEGRAM_BOT_TOKEN }}"'","CHAT_ID":"'"${{ secrets.TELEGRAM_CHAT_ID }}"'"}' > secret/telegram-config.json
        
        # Проверка создания файла
        if [ -s "secret/telegram-config.json" ]; then
          echo "✅ Конфиг создан успешно"
          echo "Размер файла: $(wc -c < secret/telegram-config.json) байт"
        else
          echo "❌ Ошибка: файл конфига пустой!"
          exit 1
        fi
    
    - name: Update script with repo info
      run: |
        sed -i "s/{{GITHUB_REPO_OWNER}}/${{ github.repository_owner }}/g" js/script.js
        sed -i "s/{{GITHUB_REPO_NAME}}/${{ github.event.repository.name }}/g" js/script.js
        echo "Script updated with repo info"
    
    - name: Verify file structure
      run: |
        echo "Текущая директория: $(pwd)"
        echo "Содержимое корня:"
        ls -la
        echo "Содержимое папки secret:"
        ls -la secret/
        echo "Содержимое папки img:"
        ls -la img/
        echo "Проверка HTML файлов:"
        ls -la *.html
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        full_commit_message: "Deploy: ${{ github.sha }}"
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        force_orphan: true
        keep_files: false
        enable_jekyll: false
    
    - name: Post-deploy verification
      run: |
        echo "Проверка доступности конфига:"
        curl -s -o /dev/null -w "HTTP код: %{http_code}" "${{ env.REPO_URL }}/secret/telegram-config.json"
        echo ""
        echo "Проверка доступности сайта:"
        curl -s -o /dev/null -w "HTTP код: %{http_code}" "${{ env.REPO_URL }}"
        echo ""
