name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Разрешает ручной запуск

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Критически важные разрешения
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Полная история коммитов
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Create Telegram config
      run: |
        mkdir -p secret
        # Важно: используем одинарные кавычки для структуры JSON и подстановку секретов
        echo '{"BOT_TOKEN":"${{ secrets.TELEGRAM_BOT_TOKEN }}","CHAT_ID":"${{ secrets.TELEGRAM_CHAT_ID }}"}' > secret/telegram-config.json
        # Для отладки: показываем содержимое без раскрытия секретов
        echo "Config file created. First 10 chars: $(head -c 10 secret/telegram-config.json)..."
        echo "File size: $(stat -c%s secret/telegram-config.json) bytes"
    
    - name: Verify Telegram config
      run: |
        echo "Checking secret folder:"
        ls -la secret/
        echo "Config content preview:"
        # Безопасный просмотр без раскрытия секретов
        head -n 1 secret/telegram-config.json | cut -c 1-30
    
    - name: Install dependencies
      run: npm ci  # Чистая установка зависимостей
    
    - name: Build project (if needed)
      run: npm run build  # Если используете сборку
    
    - name: Debug file structure
      run: |
        echo "Current directory:"
        pwd
        echo "Full structure:"
        ls -laR
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./  # Публикуем корневую директорию
        full_commit_message: "Deploy: ${{ github.sha }}"
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        # Решаем проблему с ошибкой 128:
        force_orphan: true
        keep_files: false
        enable_jekyll: false  # Важно для статических сайтов
        
    - name: Post-deploy verification
      run: |
        echo "Deployment completed!"
        echo "Website URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}"
